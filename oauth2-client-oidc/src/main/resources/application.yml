server:
  port: 8090

management:
  endpoints:
    web:
      exposure:
        include: "health,info"

spring:
  application:
    name: oauth2-client-oidc
  profiles:
    active: dev
  main:
    allow-circular-references: true
  security:
    oauth2:
      client:
        registration:
          apiBanking-public-client: # Best Practice
            provider: spring
            client-id: apiBanking-public-client
            #client-secret:
            client-authentication-method: none # if none, PKCE will automatically be used
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: openid,email
            client-name: Spring Public Authorization Server
          google:
            client-id: 442417568524-6df9ulgfc8ire1eo0r1smmgc42aaq3pe.apps.googleusercontent.com
            client-secret: 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
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}" # OAuth2LoginAuthenticationFilter
            scope: openid,profile,email
            client-name: Google
          okta:
            client-id: 0oau76r1kzOAfteIU697
            client-secret: DoPYO5tvyI8E5kJwUgQvB4_P5XGvpYSMhFKHkz0IAZjLitcMhGsAqxPWyKYuPGsU
          apiBanking-client:
            provider: spring
            client-id: apiBanking-client
            client-secret: client
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope: openid,email
            client-name: Spring Authorization Server
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth  # The Authorization Endpoint URI for the Authorization Server
            token-uri: https://www.googleapis.com/oauth2/v4/token # The Token Endpoint URI for the Authorization Server.
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs # The URI used to retrieve the JSON Web Key (JWK) Set from the Authorization Server, which contains the cryptographic key(s) used to verify the JSON Web Signature (JWS) of the ID Token and (optionally) the UserInfo Response.
            issuer-uri: https://accounts.google.com
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-info-authentication-method: header
            user-name-attribute: sub
          okta:
            authorization-uri: https://integrator-1043082.okta.com/oauth2/v1/authorize
            token-uri: https://integrator-1043082.okta.com/oauth2/v1/token
            jwk-set-uri: https://integrator-1043082.okta.com/oauth2/v1/keys
            user-info-uri: https://integrator-1043082.okta.com/oauth2/v1/userinfo
            user-name-attribute: sub
          spring:
            authorization-uri: http://localhost:9000/oauth2/authorize
            token-uri: http://localhost:9000/oauth2/token
            jwk-set-uri: http://localhost:9000/oauth2/jwks
